Nebenläufige Programmierung - Übungszettel 6
============================================

Abgegeben von:    Martin Griesser(csap2497)
Gruppe:           Gruppe 4 (Martin Griesser, Peter Kirk)
Gelöste Aufgaben: 1,2,3

Aufgabe 1:
==========

	

Aufgabe 2:
==========

	Ausführung: SemaphoreTests.java als JUnit Test
				
Aufgabe 3:
==========
	
	Ausführung: Main Funktion in Klasse AtomicFutureTasks
	
	Verwendeter Zufallszahlengenerator: java.util.Random
	
zu d)
    
    Dass Werte >= 30 nicht mehr geändert werden, wird dadurch erreicht, dass zuerst der aktuelle Wert
    am entsprechenden Index ausgelesen und überprüft wird (Funktion Task.addValue). Ist die Obergrenze
    noch nicht erreicht, wird der zu addierende Wert unter Verwendung der Funktion compareAndSet dazu-
    addiert. Diese Funktion stellt sicher, dass der Wert nur dann addiert wird, wenn der aktuelle Wert
    noch jenem entspricht, der zuvor gelesen wurde.
